openapi: 3.0.3

info:
  title: finan-smart
  description: Online financial management
  version: 'latest'

servers:
  - url: 'https://localhost:8080'


paths:
  '/ping':
    get:
      operationId: ping
      tags:
        - Health
      responses:
        200:
          description: pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
  '/signup':
    post:
      tags:
        - Security
      operationId: signup
      description: create user account with google account
      responses:
        200:
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '500':
          $ref: '#/components/responses/500'
  '/signin':
    get:
      tags:
        - Security
      operationId: signin
      description: User authentication with google
      responses:
        200:
          description: User autehenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '500':
          $ref: '#/components/responses/500'

  '/users':
    get:
      tags:
        - User
      operationId: getUsers
      description: List of all users order by budget descendante
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: pageSize
          required: false
          schema:
            type: number
      responses:
        200:
          description: All users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        '500':
          $ref: '#/components/responses/500'

  '/users/{user_id}':
    get:
      tags:
        - User
      operationId: getUser
      description: List all ZDJ
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Required user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '500':
          $ref: '#/components/responses/500'
  '/users/{id}/transactions':
    get:
      tags:
        - User
      parameters:
        - in: path
          name: id
          required: true
          description: User identifier
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: pageSize
          required: false
          schema:
            type: number
      operationId: getExpenses
      description: List all expenses or gain of a user
      responses:
        200:
          description: All expenses or gain of the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        '500':
          $ref: '#/components/responses/500'

  '/courses':
    get:
      tags:
        - Activity
      operationId: getCourses
      description: List of all existing courses
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: number
        - in: query
          name: pageSize
          required: false
          schema:
            type: number
      responses:
        200:
          description: List of existing courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
        '500':
          $ref: '#/components/responses/500'

components:
  responses:
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'

  schemas:
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: InternalServerException
        message: Unexpected error
    User:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        sex:
          type: string
        username:
          type: string
        birthdate:
          type: string
          format: date-time
        budget:
          $ref: '#/components/schemas/Budget'
    Budget:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        initialCapital:
          type: number
        currentCapital:
          type: number
        savings:
          $ref: '#/components/schemas/Saving'
    Saving:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
    Transaction:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
          enum:
            - INCOME
            - OUTCOME
        amount:
          type: number
        creationDatetime:
          type: string
          format: date-time
    Course:
      type: object
      properties:
        id:
          type: string
        module:
          type: string
        content:
          type: string
        requirements:
          type: string
        banner:
          type: string
          example: image url
        description:
          type: string

